// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: brpc/policy/baidu_rpc_meta.proto

#ifndef PROTOBUF_INCLUDED_brpc_2fpolicy_2fbaidu_5frpc_5fmeta_2eproto
#define PROTOBUF_INCLUDED_brpc_2fpolicy_2fbaidu_5frpc_5fmeta_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "brpc/options.pb.h"
#include "brpc/streaming_rpc_meta.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_brpc_2fpolicy_2fbaidu_5frpc_5fmeta_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_brpc_2fpolicy_2fbaidu_5frpc_5fmeta_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_brpc_2fpolicy_2fbaidu_5frpc_5fmeta_2eproto();
namespace brpc {
namespace policy {
class RpcMeta;
class RpcMetaDefaultTypeInternal;
extern RpcMetaDefaultTypeInternal _RpcMeta_default_instance_;
class RpcRequestMeta;
class RpcRequestMetaDefaultTypeInternal;
extern RpcRequestMetaDefaultTypeInternal _RpcRequestMeta_default_instance_;
class RpcResponseMeta;
class RpcResponseMetaDefaultTypeInternal;
extern RpcResponseMetaDefaultTypeInternal _RpcResponseMeta_default_instance_;
}  // namespace policy
}  // namespace brpc
namespace google {
namespace protobuf {
template<> ::brpc::policy::RpcMeta* Arena::CreateMaybeMessage<::brpc::policy::RpcMeta>(Arena*);
template<> ::brpc::policy::RpcRequestMeta* Arena::CreateMaybeMessage<::brpc::policy::RpcRequestMeta>(Arena*);
template<> ::brpc::policy::RpcResponseMeta* Arena::CreateMaybeMessage<::brpc::policy::RpcResponseMeta>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace brpc {
namespace policy {

// ===================================================================

class RpcMeta :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.policy.RpcMeta) */ {
 public:
  RpcMeta();
  virtual ~RpcMeta();

  RpcMeta(const RpcMeta& from);

  inline RpcMeta& operator=(const RpcMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcMeta(RpcMeta&& from) noexcept
    : RpcMeta() {
    *this = ::std::move(from);
  }

  inline RpcMeta& operator=(RpcMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RpcMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RpcMeta* internal_default_instance() {
    return reinterpret_cast<const RpcMeta*>(
               &_RpcMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RpcMeta* other);
  friend void swap(RpcMeta& a, RpcMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcMeta* New() const final {
    return CreateMaybeMessage<RpcMeta>(nullptr);
  }

  RpcMeta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RpcMeta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RpcMeta& from);
  void MergeFrom(const RpcMeta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RpcMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes authentication_data = 7;
  bool has_authentication_data() const;
  void clear_authentication_data();
  static const int kAuthenticationDataFieldNumber = 7;
  const ::std::string& authentication_data() const;
  void set_authentication_data(const ::std::string& value);
  #if LANG_CXX11
  void set_authentication_data(::std::string&& value);
  #endif
  void set_authentication_data(const char* value);
  void set_authentication_data(const void* value, size_t size);
  ::std::string* mutable_authentication_data();
  ::std::string* release_authentication_data();
  void set_allocated_authentication_data(::std::string* authentication_data);

  // optional .brpc.policy.RpcRequestMeta request = 1;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 1;
  const ::brpc::policy::RpcRequestMeta& request() const;
  ::brpc::policy::RpcRequestMeta* release_request();
  ::brpc::policy::RpcRequestMeta* mutable_request();
  void set_allocated_request(::brpc::policy::RpcRequestMeta* request);

  // optional .brpc.policy.RpcResponseMeta response = 2;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  const ::brpc::policy::RpcResponseMeta& response() const;
  ::brpc::policy::RpcResponseMeta* release_response();
  ::brpc::policy::RpcResponseMeta* mutable_response();
  void set_allocated_response(::brpc::policy::RpcResponseMeta* response);

  // optional .brpc.ChunkInfo chunk_info = 6;
  bool has_chunk_info() const;
  void clear_chunk_info();
  static const int kChunkInfoFieldNumber = 6;
  const ::brpc::ChunkInfo& chunk_info() const;
  ::brpc::ChunkInfo* release_chunk_info();
  ::brpc::ChunkInfo* mutable_chunk_info();
  void set_allocated_chunk_info(::brpc::ChunkInfo* chunk_info);

  // optional .brpc.StreamSettings stream_settings = 8;
  bool has_stream_settings() const;
  void clear_stream_settings();
  static const int kStreamSettingsFieldNumber = 8;
  const ::brpc::StreamSettings& stream_settings() const;
  ::brpc::StreamSettings* release_stream_settings();
  ::brpc::StreamSettings* mutable_stream_settings();
  void set_allocated_stream_settings(::brpc::StreamSettings* stream_settings);

  // optional int64 correlation_id = 4;
  bool has_correlation_id() const;
  void clear_correlation_id();
  static const int kCorrelationIdFieldNumber = 4;
  ::google::protobuf::int64 correlation_id() const;
  void set_correlation_id(::google::protobuf::int64 value);

  // optional int32 compress_type = 3;
  bool has_compress_type() const;
  void clear_compress_type();
  static const int kCompressTypeFieldNumber = 3;
  ::google::protobuf::int32 compress_type() const;
  void set_compress_type(::google::protobuf::int32 value);

  // optional int32 attachment_size = 5;
  bool has_attachment_size() const;
  void clear_attachment_size();
  static const int kAttachmentSizeFieldNumber = 5;
  ::google::protobuf::int32 attachment_size() const;
  void set_attachment_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:brpc.policy.RpcMeta)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr authentication_data_;
  ::brpc::policy::RpcRequestMeta* request_;
  ::brpc::policy::RpcResponseMeta* response_;
  ::brpc::ChunkInfo* chunk_info_;
  ::brpc::StreamSettings* stream_settings_;
  ::google::protobuf::int64 correlation_id_;
  ::google::protobuf::int32 compress_type_;
  ::google::protobuf::int32 attachment_size_;
  friend struct ::TableStruct_brpc_2fpolicy_2fbaidu_5frpc_5fmeta_2eproto;
};
// -------------------------------------------------------------------

class RpcRequestMeta :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.policy.RpcRequestMeta) */ {
 public:
  RpcRequestMeta();
  virtual ~RpcRequestMeta();

  RpcRequestMeta(const RpcRequestMeta& from);

  inline RpcRequestMeta& operator=(const RpcRequestMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcRequestMeta(RpcRequestMeta&& from) noexcept
    : RpcRequestMeta() {
    *this = ::std::move(from);
  }

  inline RpcRequestMeta& operator=(RpcRequestMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RpcRequestMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RpcRequestMeta* internal_default_instance() {
    return reinterpret_cast<const RpcRequestMeta*>(
               &_RpcRequestMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RpcRequestMeta* other);
  friend void swap(RpcRequestMeta& a, RpcRequestMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcRequestMeta* New() const final {
    return CreateMaybeMessage<RpcRequestMeta>(nullptr);
  }

  RpcRequestMeta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RpcRequestMeta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RpcRequestMeta& from);
  void MergeFrom(const RpcRequestMeta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RpcRequestMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string service_name = 1;
  bool has_service_name() const;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  #if LANG_CXX11
  void set_service_name(::std::string&& value);
  #endif
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);

  // required string method_name = 2;
  bool has_method_name() const;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 2;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  #if LANG_CXX11
  void set_method_name(::std::string&& value);
  #endif
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);

  // optional int64 log_id = 3;
  bool has_log_id() const;
  void clear_log_id();
  static const int kLogIdFieldNumber = 3;
  ::google::protobuf::int64 log_id() const;
  void set_log_id(::google::protobuf::int64 value);

  // optional int64 trace_id = 4;
  bool has_trace_id() const;
  void clear_trace_id();
  static const int kTraceIdFieldNumber = 4;
  ::google::protobuf::int64 trace_id() const;
  void set_trace_id(::google::protobuf::int64 value);

  // optional int64 span_id = 5;
  bool has_span_id() const;
  void clear_span_id();
  static const int kSpanIdFieldNumber = 5;
  ::google::protobuf::int64 span_id() const;
  void set_span_id(::google::protobuf::int64 value);

  // optional int64 parent_span_id = 6;
  bool has_parent_span_id() const;
  void clear_parent_span_id();
  static const int kParentSpanIdFieldNumber = 6;
  ::google::protobuf::int64 parent_span_id() const;
  void set_parent_span_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:brpc.policy.RpcRequestMeta)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  ::google::protobuf::int64 log_id_;
  ::google::protobuf::int64 trace_id_;
  ::google::protobuf::int64 span_id_;
  ::google::protobuf::int64 parent_span_id_;
  friend struct ::TableStruct_brpc_2fpolicy_2fbaidu_5frpc_5fmeta_2eproto;
};
// -------------------------------------------------------------------

class RpcResponseMeta :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brpc.policy.RpcResponseMeta) */ {
 public:
  RpcResponseMeta();
  virtual ~RpcResponseMeta();

  RpcResponseMeta(const RpcResponseMeta& from);

  inline RpcResponseMeta& operator=(const RpcResponseMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RpcResponseMeta(RpcResponseMeta&& from) noexcept
    : RpcResponseMeta() {
    *this = ::std::move(from);
  }

  inline RpcResponseMeta& operator=(RpcResponseMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const RpcResponseMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RpcResponseMeta* internal_default_instance() {
    return reinterpret_cast<const RpcResponseMeta*>(
               &_RpcResponseMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(RpcResponseMeta* other);
  friend void swap(RpcResponseMeta& a, RpcResponseMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RpcResponseMeta* New() const final {
    return CreateMaybeMessage<RpcResponseMeta>(nullptr);
  }

  RpcResponseMeta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RpcResponseMeta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RpcResponseMeta& from);
  void MergeFrom(const RpcResponseMeta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RpcResponseMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error_text = 2;
  bool has_error_text() const;
  void clear_error_text();
  static const int kErrorTextFieldNumber = 2;
  const ::std::string& error_text() const;
  void set_error_text(const ::std::string& value);
  #if LANG_CXX11
  void set_error_text(::std::string&& value);
  #endif
  void set_error_text(const char* value);
  void set_error_text(const char* value, size_t size);
  ::std::string* mutable_error_text();
  ::std::string* release_error_text();
  void set_allocated_error_text(::std::string* error_text);

  // optional int32 error_code = 1;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:brpc.policy.RpcResponseMeta)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_text_;
  ::google::protobuf::int32 error_code_;
  friend struct ::TableStruct_brpc_2fpolicy_2fbaidu_5frpc_5fmeta_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RpcMeta

// optional .brpc.policy.RpcRequestMeta request = 1;
inline bool RpcMeta::has_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcMeta::clear_request() {
  if (request_ != nullptr) request_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::brpc::policy::RpcRequestMeta& RpcMeta::request() const {
  const ::brpc::policy::RpcRequestMeta* p = request_;
  // @@protoc_insertion_point(field_get:brpc.policy.RpcMeta.request)
  return p != nullptr ? *p : *reinterpret_cast<const ::brpc::policy::RpcRequestMeta*>(
      &::brpc::policy::_RpcRequestMeta_default_instance_);
}
inline ::brpc::policy::RpcRequestMeta* RpcMeta::release_request() {
  // @@protoc_insertion_point(field_release:brpc.policy.RpcMeta.request)
  _has_bits_[0] &= ~0x00000002u;
  ::brpc::policy::RpcRequestMeta* temp = request_;
  request_ = nullptr;
  return temp;
}
inline ::brpc::policy::RpcRequestMeta* RpcMeta::mutable_request() {
  _has_bits_[0] |= 0x00000002u;
  if (request_ == nullptr) {
    auto* p = CreateMaybeMessage<::brpc::policy::RpcRequestMeta>(GetArenaNoVirtual());
    request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brpc.policy.RpcMeta.request)
  return request_;
}
inline void RpcMeta::set_allocated_request(::brpc::policy::RpcRequestMeta* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete request_;
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:brpc.policy.RpcMeta.request)
}

// optional .brpc.policy.RpcResponseMeta response = 2;
inline bool RpcMeta::has_response() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RpcMeta::clear_response() {
  if (response_ != nullptr) response_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::brpc::policy::RpcResponseMeta& RpcMeta::response() const {
  const ::brpc::policy::RpcResponseMeta* p = response_;
  // @@protoc_insertion_point(field_get:brpc.policy.RpcMeta.response)
  return p != nullptr ? *p : *reinterpret_cast<const ::brpc::policy::RpcResponseMeta*>(
      &::brpc::policy::_RpcResponseMeta_default_instance_);
}
inline ::brpc::policy::RpcResponseMeta* RpcMeta::release_response() {
  // @@protoc_insertion_point(field_release:brpc.policy.RpcMeta.response)
  _has_bits_[0] &= ~0x00000004u;
  ::brpc::policy::RpcResponseMeta* temp = response_;
  response_ = nullptr;
  return temp;
}
inline ::brpc::policy::RpcResponseMeta* RpcMeta::mutable_response() {
  _has_bits_[0] |= 0x00000004u;
  if (response_ == nullptr) {
    auto* p = CreateMaybeMessage<::brpc::policy::RpcResponseMeta>(GetArenaNoVirtual());
    response_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brpc.policy.RpcMeta.response)
  return response_;
}
inline void RpcMeta::set_allocated_response(::brpc::policy::RpcResponseMeta* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete response_;
  }
  if (response) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  response_ = response;
  // @@protoc_insertion_point(field_set_allocated:brpc.policy.RpcMeta.response)
}

// optional int32 compress_type = 3;
inline bool RpcMeta::has_compress_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RpcMeta::clear_compress_type() {
  compress_type_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::google::protobuf::int32 RpcMeta::compress_type() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcMeta.compress_type)
  return compress_type_;
}
inline void RpcMeta::set_compress_type(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  compress_type_ = value;
  // @@protoc_insertion_point(field_set:brpc.policy.RpcMeta.compress_type)
}

// optional int64 correlation_id = 4;
inline bool RpcMeta::has_correlation_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RpcMeta::clear_correlation_id() {
  correlation_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int64 RpcMeta::correlation_id() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcMeta.correlation_id)
  return correlation_id_;
}
inline void RpcMeta::set_correlation_id(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  correlation_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.policy.RpcMeta.correlation_id)
}

// optional int32 attachment_size = 5;
inline bool RpcMeta::has_attachment_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RpcMeta::clear_attachment_size() {
  attachment_size_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::google::protobuf::int32 RpcMeta::attachment_size() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcMeta.attachment_size)
  return attachment_size_;
}
inline void RpcMeta::set_attachment_size(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  attachment_size_ = value;
  // @@protoc_insertion_point(field_set:brpc.policy.RpcMeta.attachment_size)
}

// optional .brpc.ChunkInfo chunk_info = 6;
inline bool RpcMeta::has_chunk_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline const ::brpc::ChunkInfo& RpcMeta::chunk_info() const {
  const ::brpc::ChunkInfo* p = chunk_info_;
  // @@protoc_insertion_point(field_get:brpc.policy.RpcMeta.chunk_info)
  return p != nullptr ? *p : *reinterpret_cast<const ::brpc::ChunkInfo*>(
      &::brpc::_ChunkInfo_default_instance_);
}
inline ::brpc::ChunkInfo* RpcMeta::release_chunk_info() {
  // @@protoc_insertion_point(field_release:brpc.policy.RpcMeta.chunk_info)
  _has_bits_[0] &= ~0x00000008u;
  ::brpc::ChunkInfo* temp = chunk_info_;
  chunk_info_ = nullptr;
  return temp;
}
inline ::brpc::ChunkInfo* RpcMeta::mutable_chunk_info() {
  _has_bits_[0] |= 0x00000008u;
  if (chunk_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::brpc::ChunkInfo>(GetArenaNoVirtual());
    chunk_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brpc.policy.RpcMeta.chunk_info)
  return chunk_info_;
}
inline void RpcMeta::set_allocated_chunk_info(::brpc::ChunkInfo* chunk_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(chunk_info_);
  }
  if (chunk_info) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      chunk_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chunk_info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  chunk_info_ = chunk_info;
  // @@protoc_insertion_point(field_set_allocated:brpc.policy.RpcMeta.chunk_info)
}

// optional bytes authentication_data = 7;
inline bool RpcMeta::has_authentication_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcMeta::clear_authentication_data() {
  authentication_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RpcMeta::authentication_data() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcMeta.authentication_data)
  return authentication_data_.GetNoArena();
}
inline void RpcMeta::set_authentication_data(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  authentication_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:brpc.policy.RpcMeta.authentication_data)
}
#if LANG_CXX11
inline void RpcMeta::set_authentication_data(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  authentication_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:brpc.policy.RpcMeta.authentication_data)
}
#endif
inline void RpcMeta::set_authentication_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  authentication_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:brpc.policy.RpcMeta.authentication_data)
}
inline void RpcMeta::set_authentication_data(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  authentication_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:brpc.policy.RpcMeta.authentication_data)
}
inline ::std::string* RpcMeta::mutable_authentication_data() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:brpc.policy.RpcMeta.authentication_data)
  return authentication_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcMeta::release_authentication_data() {
  // @@protoc_insertion_point(field_release:brpc.policy.RpcMeta.authentication_data)
  if (!has_authentication_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return authentication_data_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcMeta::set_allocated_authentication_data(::std::string* authentication_data) {
  if (authentication_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  authentication_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authentication_data);
  // @@protoc_insertion_point(field_set_allocated:brpc.policy.RpcMeta.authentication_data)
}

// optional .brpc.StreamSettings stream_settings = 8;
inline bool RpcMeta::has_stream_settings() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline const ::brpc::StreamSettings& RpcMeta::stream_settings() const {
  const ::brpc::StreamSettings* p = stream_settings_;
  // @@protoc_insertion_point(field_get:brpc.policy.RpcMeta.stream_settings)
  return p != nullptr ? *p : *reinterpret_cast<const ::brpc::StreamSettings*>(
      &::brpc::_StreamSettings_default_instance_);
}
inline ::brpc::StreamSettings* RpcMeta::release_stream_settings() {
  // @@protoc_insertion_point(field_release:brpc.policy.RpcMeta.stream_settings)
  _has_bits_[0] &= ~0x00000010u;
  ::brpc::StreamSettings* temp = stream_settings_;
  stream_settings_ = nullptr;
  return temp;
}
inline ::brpc::StreamSettings* RpcMeta::mutable_stream_settings() {
  _has_bits_[0] |= 0x00000010u;
  if (stream_settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::brpc::StreamSettings>(GetArenaNoVirtual());
    stream_settings_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brpc.policy.RpcMeta.stream_settings)
  return stream_settings_;
}
inline void RpcMeta::set_allocated_stream_settings(::brpc::StreamSettings* stream_settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(stream_settings_);
  }
  if (stream_settings) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      stream_settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stream_settings, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  stream_settings_ = stream_settings;
  // @@protoc_insertion_point(field_set_allocated:brpc.policy.RpcMeta.stream_settings)
}

// -------------------------------------------------------------------

// RpcRequestMeta

// required string service_name = 1;
inline bool RpcRequestMeta::has_service_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcRequestMeta::clear_service_name() {
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RpcRequestMeta::service_name() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcRequestMeta.service_name)
  return service_name_.GetNoArena();
}
inline void RpcRequestMeta::set_service_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:brpc.policy.RpcRequestMeta.service_name)
}
#if LANG_CXX11
inline void RpcRequestMeta::set_service_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  service_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:brpc.policy.RpcRequestMeta.service_name)
}
#endif
inline void RpcRequestMeta::set_service_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:brpc.policy.RpcRequestMeta.service_name)
}
inline void RpcRequestMeta::set_service_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:brpc.policy.RpcRequestMeta.service_name)
}
inline ::std::string* RpcRequestMeta::mutable_service_name() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:brpc.policy.RpcRequestMeta.service_name)
  return service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcRequestMeta::release_service_name() {
  // @@protoc_insertion_point(field_release:brpc.policy.RpcRequestMeta.service_name)
  if (!has_service_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return service_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcRequestMeta::set_allocated_service_name(::std::string* service_name) {
  if (service_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name);
  // @@protoc_insertion_point(field_set_allocated:brpc.policy.RpcRequestMeta.service_name)
}

// required string method_name = 2;
inline bool RpcRequestMeta::has_method_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcRequestMeta::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& RpcRequestMeta::method_name() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcRequestMeta.method_name)
  return method_name_.GetNoArena();
}
inline void RpcRequestMeta::set_method_name(const ::std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:brpc.policy.RpcRequestMeta.method_name)
}
#if LANG_CXX11
inline void RpcRequestMeta::set_method_name(::std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  method_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:brpc.policy.RpcRequestMeta.method_name)
}
#endif
inline void RpcRequestMeta::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:brpc.policy.RpcRequestMeta.method_name)
}
inline void RpcRequestMeta::set_method_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:brpc.policy.RpcRequestMeta.method_name)
}
inline ::std::string* RpcRequestMeta::mutable_method_name() {
  _has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_mutable:brpc.policy.RpcRequestMeta.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcRequestMeta::release_method_name() {
  // @@protoc_insertion_point(field_release:brpc.policy.RpcRequestMeta.method_name)
  if (!has_method_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return method_name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcRequestMeta::set_allocated_method_name(::std::string* method_name) {
  if (method_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:brpc.policy.RpcRequestMeta.method_name)
}

// optional int64 log_id = 3;
inline bool RpcRequestMeta::has_log_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RpcRequestMeta::clear_log_id() {
  log_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int64 RpcRequestMeta::log_id() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcRequestMeta.log_id)
  return log_id_;
}
inline void RpcRequestMeta::set_log_id(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  log_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.policy.RpcRequestMeta.log_id)
}

// optional int64 trace_id = 4;
inline bool RpcRequestMeta::has_trace_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RpcRequestMeta::clear_trace_id() {
  trace_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::google::protobuf::int64 RpcRequestMeta::trace_id() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcRequestMeta.trace_id)
  return trace_id_;
}
inline void RpcRequestMeta::set_trace_id(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  trace_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.policy.RpcRequestMeta.trace_id)
}

// optional int64 span_id = 5;
inline bool RpcRequestMeta::has_span_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RpcRequestMeta::clear_span_id() {
  span_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::google::protobuf::int64 RpcRequestMeta::span_id() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcRequestMeta.span_id)
  return span_id_;
}
inline void RpcRequestMeta::set_span_id(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  span_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.policy.RpcRequestMeta.span_id)
}

// optional int64 parent_span_id = 6;
inline bool RpcRequestMeta::has_parent_span_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RpcRequestMeta::clear_parent_span_id() {
  parent_span_id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::google::protobuf::int64 RpcRequestMeta::parent_span_id() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcRequestMeta.parent_span_id)
  return parent_span_id_;
}
inline void RpcRequestMeta::set_parent_span_id(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  parent_span_id_ = value;
  // @@protoc_insertion_point(field_set:brpc.policy.RpcRequestMeta.parent_span_id)
}

// -------------------------------------------------------------------

// RpcResponseMeta

// optional int32 error_code = 1;
inline bool RpcResponseMeta::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcResponseMeta::clear_error_code() {
  error_code_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 RpcResponseMeta::error_code() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcResponseMeta.error_code)
  return error_code_;
}
inline void RpcResponseMeta::set_error_code(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  error_code_ = value;
  // @@protoc_insertion_point(field_set:brpc.policy.RpcResponseMeta.error_code)
}

// optional string error_text = 2;
inline bool RpcResponseMeta::has_error_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcResponseMeta::clear_error_text() {
  error_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RpcResponseMeta::error_text() const {
  // @@protoc_insertion_point(field_get:brpc.policy.RpcResponseMeta.error_text)
  return error_text_.GetNoArena();
}
inline void RpcResponseMeta::set_error_text(const ::std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:brpc.policy.RpcResponseMeta.error_text)
}
#if LANG_CXX11
inline void RpcResponseMeta::set_error_text(::std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  error_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:brpc.policy.RpcResponseMeta.error_text)
}
#endif
inline void RpcResponseMeta::set_error_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:brpc.policy.RpcResponseMeta.error_text)
}
inline void RpcResponseMeta::set_error_text(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  error_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:brpc.policy.RpcResponseMeta.error_text)
}
inline ::std::string* RpcResponseMeta::mutable_error_text() {
  _has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_mutable:brpc.policy.RpcResponseMeta.error_text)
  return error_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RpcResponseMeta::release_error_text() {
  // @@protoc_insertion_point(field_release:brpc.policy.RpcResponseMeta.error_text)
  if (!has_error_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return error_text_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RpcResponseMeta::set_allocated_error_text(::std::string* error_text) {
  if (error_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  error_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_text);
  // @@protoc_insertion_point(field_set_allocated:brpc.policy.RpcResponseMeta.error_text)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace policy
}  // namespace brpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_brpc_2fpolicy_2fbaidu_5frpc_5fmeta_2eproto
