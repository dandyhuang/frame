// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metric.proto

#include "metric.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_metric_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metric_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MValue;
}  // namespace protobuf_metric_2eproto
namespace protobuf_span_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_span_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AttachInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_span_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EndPoint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_span_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TagEntry;
}  // namespace protobuf_span_2eproto
namespace metric {
class MValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MValue>
      _instance;
} _MValue_default_instance_;
class MetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metric>
      _instance;
} _Metric_default_instance_;
}  // namespace metric
namespace protobuf_metric_2eproto {
static void InitDefaultsMValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metric::_MValue_default_instance_;
    new (ptr) ::metric::MValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metric::MValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMValue}, {}};

static void InitDefaultsMetric() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::metric::_Metric_default_instance_;
    new (ptr) ::metric::Metric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::metric::Metric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Metric =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsMetric}, {
      &protobuf_span_2eproto::scc_info_EndPoint.base,
      &protobuf_span_2eproto::scc_info_AttachInfo.base,
      &protobuf_metric_2eproto::scc_info_MValue.base,
      &protobuf_span_2eproto::scc_info_TagEntry.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Metric.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, totalcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, successcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, failedcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, timeoutcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, exceptioncount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, rt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, max_rt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, min_rt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, p99_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::MValue, p95_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, sdkver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, component_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, method_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, span_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, endpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, attachinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, mvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::metric::Metric, dimension_tags_),
  0,
  11,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::metric::MValue)},
  { 25, 44, sizeof(::metric::Metric)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::metric::_MValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::metric::_Metric_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "metric.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014metric.proto\022\006metric\032\nspan.proto\"\273\001\n\006M"
      "Value\022\022\n\ntotalCount\030\001 \002(\003\022\024\n\014successCoun"
      "t\030\002 \002(\003\022\023\n\013failedCount\030\003 \002(\003\022\024\n\014timeoutC"
      "ount\030\004 \002(\003\022\026\n\016exceptionCount\030\005 \002(\003\022\n\n\002rt"
      "\030\006 \002(\005\022\016\n\006max_rt\030\007 \002(\005\022\016\n\006min_rt\030\010 \002(\005\022\013"
      "\n\003p99\030\t \002(\005\022\013\n\003p95\030\n \002(\005\"\324\002\n\006Metric\022\016\n\006s"
      "dkVer\030\001 \002(\t\022\021\n\ttimestamp\030\002 \002(\003\022\014\n\004type\030\003"
      " \002(\t\022\021\n\tcomponent\030\004 \002(\t\022\023\n\013method_name\030\005"
      " \001(\t\022\024\n\014service_name\030\006 \001(\t\022\016\n\006domain\030\007 \001"
      "(\t\022\014\n\004sign\030\010 \001(\t\022\017\n\007span_id\030\t \002(\t\022 \n\010end"
      "point\030\n \002(\0132\016.span.EndPoint\022$\n\nattachInf"
      "o\030\013 \002(\0132\020.span.AttachInfo\022\036\n\006mvalue\030\014 \001("
      "\0132\016.metric.MValue\022\034\n\004tags\030\r \003(\0132\016.span.T"
      "agEntry\022&\n\016dimension_tags\030\016 \003(\0132\016.span.T"
      "agEntry"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 567);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "metric.proto", &protobuf_RegisterTypes);
  ::protobuf_span_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_metric_2eproto
namespace metric {

// ===================================================================

void MValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MValue::kTotalCountFieldNumber;
const int MValue::kSuccessCountFieldNumber;
const int MValue::kFailedCountFieldNumber;
const int MValue::kTimeoutCountFieldNumber;
const int MValue::kExceptionCountFieldNumber;
const int MValue::kRtFieldNumber;
const int MValue::kMaxRtFieldNumber;
const int MValue::kMinRtFieldNumber;
const int MValue::kP99FieldNumber;
const int MValue::kP95FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MValue::MValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metric_2eproto::scc_info_MValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metric.MValue)
}
MValue::MValue(const MValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&totalcount_, &from.totalcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&p95_) -
    reinterpret_cast<char*>(&totalcount_)) + sizeof(p95_));
  // @@protoc_insertion_point(copy_constructor:metric.MValue)
}

void MValue::SharedCtor() {
  ::memset(&totalcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&p95_) -
      reinterpret_cast<char*>(&totalcount_)) + sizeof(p95_));
}

MValue::~MValue() {
  // @@protoc_insertion_point(destructor:metric.MValue)
  SharedDtor();
}

void MValue::SharedDtor() {
}

void MValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MValue::descriptor() {
  ::protobuf_metric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metric_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MValue& MValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metric_2eproto::scc_info_MValue.base);
  return *internal_default_instance();
}


void MValue::Clear() {
// @@protoc_insertion_point(message_clear_start:metric.MValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&totalcount_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&min_rt_) -
        reinterpret_cast<char*>(&totalcount_)) + sizeof(min_rt_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&p99_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&p95_) -
        reinterpret_cast<char*>(&p99_)) + sizeof(p95_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metric.MValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 totalCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_totalcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &totalcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 successCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_successcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &successcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 failedCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_failedcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &failedcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timeoutCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_timeoutcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timeoutcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 exceptionCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_exceptioncount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exceptioncount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 rt = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_rt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 max_rt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_max_rt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_rt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 min_rt = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_min_rt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_rt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p99 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_p99();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p99_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 p95 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_p95();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p95_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metric.MValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metric.MValue)
  return false;
#undef DO_
}

void MValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metric.MValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 totalCount = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->totalcount(), output);
  }

  // required int64 successCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->successcount(), output);
  }

  // required int64 failedCount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->failedcount(), output);
  }

  // required int64 timeoutCount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timeoutcount(), output);
  }

  // required int64 exceptionCount = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->exceptioncount(), output);
  }

  // required int32 rt = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rt(), output);
  }

  // required int32 max_rt = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->max_rt(), output);
  }

  // required int32 min_rt = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->min_rt(), output);
  }

  // required int32 p99 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->p99(), output);
  }

  // required int32 p95 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->p95(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metric.MValue)
}

::google::protobuf::uint8* MValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metric.MValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int64 totalCount = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->totalcount(), target);
  }

  // required int64 successCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->successcount(), target);
  }

  // required int64 failedCount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->failedcount(), target);
  }

  // required int64 timeoutCount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->timeoutcount(), target);
  }

  // required int64 exceptionCount = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->exceptioncount(), target);
  }

  // required int32 rt = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rt(), target);
  }

  // required int32 max_rt = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->max_rt(), target);
  }

  // required int32 min_rt = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->min_rt(), target);
  }

  // required int32 p99 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->p99(), target);
  }

  // required int32 p95 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->p95(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metric.MValue)
  return target;
}

size_t MValue::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:metric.MValue)
  size_t total_size = 0;

  if (has_totalcount()) {
    // required int64 totalCount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalcount());
  }

  if (has_successcount()) {
    // required int64 successCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->successcount());
  }

  if (has_failedcount()) {
    // required int64 failedCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->failedcount());
  }

  if (has_timeoutcount()) {
    // required int64 timeoutCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timeoutcount());
  }

  if (has_exceptioncount()) {
    // required int64 exceptionCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exceptioncount());
  }

  if (has_rt()) {
    // required int32 rt = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rt());
  }

  if (has_max_rt()) {
    // required int32 max_rt = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_rt());
  }

  if (has_min_rt()) {
    // required int32 min_rt = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_rt());
  }

  if (has_p99()) {
    // required int32 p99 = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p99());
  }

  if (has_p95()) {
    // required int32 p95 = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p95());
  }

  return total_size;
}
size_t MValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metric.MValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
    // required int64 totalCount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->totalcount());

    // required int64 successCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->successcount());

    // required int64 failedCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->failedcount());

    // required int64 timeoutCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timeoutcount());

    // required int64 exceptionCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exceptioncount());

    // required int32 rt = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rt());

    // required int32 max_rt = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_rt());

    // required int32 min_rt = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_rt());

    // required int32 p99 = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p99());

    // required int32 p95 = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->p95());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metric.MValue)
  GOOGLE_DCHECK_NE(&from, this);
  const MValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metric.MValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metric.MValue)
    MergeFrom(*source);
  }
}

void MValue::MergeFrom(const MValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metric.MValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      totalcount_ = from.totalcount_;
    }
    if (cached_has_bits & 0x00000002u) {
      successcount_ = from.successcount_;
    }
    if (cached_has_bits & 0x00000004u) {
      failedcount_ = from.failedcount_;
    }
    if (cached_has_bits & 0x00000008u) {
      timeoutcount_ = from.timeoutcount_;
    }
    if (cached_has_bits & 0x00000010u) {
      exceptioncount_ = from.exceptioncount_;
    }
    if (cached_has_bits & 0x00000020u) {
      rt_ = from.rt_;
    }
    if (cached_has_bits & 0x00000040u) {
      max_rt_ = from.max_rt_;
    }
    if (cached_has_bits & 0x00000080u) {
      min_rt_ = from.min_rt_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      p99_ = from.p99_;
    }
    if (cached_has_bits & 0x00000200u) {
      p95_ = from.p95_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metric.MValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MValue::CopyFrom(const MValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metric.MValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MValue::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;
  return true;
}

void MValue::Swap(MValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MValue::InternalSwap(MValue* other) {
  using std::swap;
  swap(totalcount_, other->totalcount_);
  swap(successcount_, other->successcount_);
  swap(failedcount_, other->failedcount_);
  swap(timeoutcount_, other->timeoutcount_);
  swap(exceptioncount_, other->exceptioncount_);
  swap(rt_, other->rt_);
  swap(max_rt_, other->max_rt_);
  swap(min_rt_, other->min_rt_);
  swap(p99_, other->p99_);
  swap(p95_, other->p95_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MValue::GetMetadata() const {
  protobuf_metric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metric_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Metric::InitAsDefaultInstance() {
  ::metric::_Metric_default_instance_._instance.get_mutable()->endpoint_ = const_cast< ::span::EndPoint*>(
      ::span::EndPoint::internal_default_instance());
  ::metric::_Metric_default_instance_._instance.get_mutable()->attachinfo_ = const_cast< ::span::AttachInfo*>(
      ::span::AttachInfo::internal_default_instance());
  ::metric::_Metric_default_instance_._instance.get_mutable()->mvalue_ = const_cast< ::metric::MValue*>(
      ::metric::MValue::internal_default_instance());
}
void Metric::clear_endpoint() {
  if (endpoint_ != NULL) endpoint_->Clear();
  clear_has_endpoint();
}
void Metric::clear_attachinfo() {
  if (attachinfo_ != NULL) attachinfo_->Clear();
  clear_has_attachinfo();
}
void Metric::clear_tags() {
  tags_.Clear();
}
void Metric::clear_dimension_tags() {
  dimension_tags_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metric::kSdkVerFieldNumber;
const int Metric::kTimestampFieldNumber;
const int Metric::kTypeFieldNumber;
const int Metric::kComponentFieldNumber;
const int Metric::kMethodNameFieldNumber;
const int Metric::kServiceNameFieldNumber;
const int Metric::kDomainFieldNumber;
const int Metric::kSignFieldNumber;
const int Metric::kSpanIdFieldNumber;
const int Metric::kEndpointFieldNumber;
const int Metric::kAttachInfoFieldNumber;
const int Metric::kMvalueFieldNumber;
const int Metric::kTagsFieldNumber;
const int Metric::kDimensionTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metric::Metric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_metric_2eproto::scc_info_Metric.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:metric.Metric)
}
Metric::Metric(const Metric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      tags_(from.tags_),
      dimension_tags_(from.dimension_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sdkver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sdkver()) {
    sdkver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdkver_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_type()) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  component_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_component()) {
    component_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_);
  }
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method_name()) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_service_name()) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_domain()) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign()) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  span_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_span_id()) {
    span_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.span_id_);
  }
  if (from.has_endpoint()) {
    endpoint_ = new ::span::EndPoint(*from.endpoint_);
  } else {
    endpoint_ = NULL;
  }
  if (from.has_attachinfo()) {
    attachinfo_ = new ::span::AttachInfo(*from.attachinfo_);
  } else {
    attachinfo_ = NULL;
  }
  if (from.has_mvalue()) {
    mvalue_ = new ::metric::MValue(*from.mvalue_);
  } else {
    mvalue_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:metric.Metric)
}

void Metric::SharedCtor() {
  sdkver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  span_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&endpoint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&endpoint_)) + sizeof(timestamp_));
}

Metric::~Metric() {
  // @@protoc_insertion_point(destructor:metric.Metric)
  SharedDtor();
}

void Metric::SharedDtor() {
  sdkver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  span_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete endpoint_;
  if (this != internal_default_instance()) delete attachinfo_;
  if (this != internal_default_instance()) delete mvalue_;
}

void Metric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Metric::descriptor() {
  ::protobuf_metric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metric_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metric& Metric::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_metric_2eproto::scc_info_Metric.base);
  return *internal_default_instance();
}


void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:metric.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  dimension_tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      sdkver_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      type_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      component_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      method_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      service_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      domain_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000040u) {
      sign_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000080u) {
      span_id_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(endpoint_ != NULL);
      endpoint_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(attachinfo_ != NULL);
      attachinfo_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(mvalue_ != NULL);
      mvalue_->Clear();
    }
  }
  timestamp_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Metric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:metric.Metric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sdkVer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdkver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sdkver().data(), static_cast<int>(this->sdkver().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metric.Metric.sdkVer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metric.Metric.type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string component = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_component()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->component().data(), static_cast<int>(this->component().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metric.Metric.component");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string method_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), static_cast<int>(this->method_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metric.Metric.method_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string service_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metric.Metric.service_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string domain = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metric.Metric.domain");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sign = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sign().data(), static_cast<int>(this->sign().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metric.Metric.sign");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string span_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_span_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->span_id().data(), static_cast<int>(this->span_id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "metric.Metric.span_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .span.EndPoint endpoint = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_endpoint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .span.AttachInfo attachInfo = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attachinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .metric.MValue mvalue = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .span.TagEntry tags = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .span.TagEntry dimension_tags = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_dimension_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:metric.Metric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:metric.Metric)
  return false;
#undef DO_
}

void Metric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:metric.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sdkVer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdkver().data(), static_cast<int>(this->sdkver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.sdkVer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sdkver(), output);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // required string type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // required string component = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component().data(), static_cast<int>(this->component().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.component");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->component(), output);
  }

  // optional string method_name = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->method_name(), output);
  }

  // optional string service_name = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->service_name(), output);
  }

  // optional string domain = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->domain(), output);
  }

  // optional string sign = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->sign(), output);
  }

  // required string span_id = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->span_id().data(), static_cast<int>(this->span_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.span_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->span_id(), output);
  }

  // required .span.EndPoint endpoint = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_endpoint(), output);
  }

  // required .span.AttachInfo attachInfo = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_attachinfo(), output);
  }

  // optional .metric.MValue mvalue = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_mvalue(), output);
  }

  // repeated .span.TagEntry tags = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->tags(static_cast<int>(i)),
      output);
  }

  // repeated .span.TagEntry dimension_tags = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimension_tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->dimension_tags(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:metric.Metric)
}

::google::protobuf::uint8* Metric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:metric.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sdkVer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sdkver().data(), static_cast<int>(this->sdkver().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.sdkVer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sdkver(), target);
  }

  // required int64 timestamp = 2;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // required string type = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // required string component = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->component().data(), static_cast<int>(this->component().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.component");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->component(), target);
  }

  // optional string method_name = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->method_name(), target);
  }

  // optional string service_name = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->service_name(), target);
  }

  // optional string domain = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->domain(), target);
  }

  // optional string sign = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sign().data(), static_cast<int>(this->sign().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->sign(), target);
  }

  // required string span_id = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->span_id().data(), static_cast<int>(this->span_id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "metric.Metric.span_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->span_id(), target);
  }

  // required .span.EndPoint endpoint = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_endpoint(), deterministic, target);
  }

  // required .span.AttachInfo attachInfo = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_attachinfo(), deterministic, target);
  }

  // optional .metric.MValue mvalue = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_mvalue(), deterministic, target);
  }

  // repeated .span.TagEntry tags = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->tags(static_cast<int>(i)), deterministic, target);
  }

  // repeated .span.TagEntry dimension_tags = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dimension_tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->dimension_tags(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:metric.Metric)
  return target;
}

size_t Metric::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:metric.Metric)
  size_t total_size = 0;

  if (has_sdkver()) {
    // required string sdkVer = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdkver());
  }

  if (has_type()) {
    // required string type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  if (has_component()) {
    // required string component = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->component());
  }

  if (has_span_id()) {
    // required string span_id = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->span_id());
  }

  if (has_endpoint()) {
    // required .span.EndPoint endpoint = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *endpoint_);
  }

  if (has_attachinfo()) {
    // required .span.AttachInfo attachInfo = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attachinfo_);
  }

  if (has_timestamp()) {
    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  return total_size;
}
size_t Metric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:metric.Metric)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000b87) ^ 0x00000b87) == 0) {  // All required fields are present.
    // required string sdkVer = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdkver());

    // required string type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());

    // required string component = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->component());

    // required string span_id = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->span_id());

    // required .span.EndPoint endpoint = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *endpoint_);

    // required .span.AttachInfo attachInfo = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attachinfo_);

    // required int64 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .span.TagEntry tags = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  // repeated .span.TagEntry dimension_tags = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->dimension_tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->dimension_tags(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 120u) {
    // optional string method_name = 5;
    if (has_method_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional string service_name = 6;
    if (has_service_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->service_name());
    }

    // optional string domain = 7;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional string sign = 8;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sign());
    }

  }
  // optional .metric.MValue mvalue = 12;
  if (has_mvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mvalue_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:metric.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  const Metric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:metric.Metric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:metric.Metric)
    MergeFrom(*source);
  }
}

void Metric::MergeFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:metric.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  dimension_tags_.MergeFrom(from.dimension_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sdkver();
      sdkver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdkver_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_type();
      type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_component();
      component_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.component_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_method_name();
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_service_name();
      service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_sign();
      sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_span_id();
      span_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.span_id_);
    }
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_endpoint()->::span::EndPoint::MergeFrom(from.endpoint());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_attachinfo()->::span::AttachInfo::MergeFrom(from.attachinfo());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_mvalue()->::metric::MValue::MergeFrom(from.mvalue());
    }
    if (cached_has_bits & 0x00000800u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Metric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:metric.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:metric.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metric::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000b87) != 0x00000b87) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->tags())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->dimension_tags())) return false;
  if (has_endpoint()) {
    if (!this->endpoint_->IsInitialized()) return false;
  }
  if (has_mvalue()) {
    if (!this->mvalue_->IsInitialized()) return false;
  }
  return true;
}

void Metric::Swap(Metric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metric::InternalSwap(Metric* other) {
  using std::swap;
  CastToBase(&tags_)->InternalSwap(CastToBase(&other->tags_));
  CastToBase(&dimension_tags_)->InternalSwap(CastToBase(&other->dimension_tags_));
  sdkver_.Swap(&other->sdkver_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  component_.Swap(&other->component_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  method_name_.Swap(&other->method_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  domain_.Swap(&other->domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_.Swap(&other->sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  span_id_.Swap(&other->span_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(endpoint_, other->endpoint_);
  swap(attachinfo_, other->attachinfo_);
  swap(mvalue_, other->mvalue_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  protobuf_metric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_metric_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace metric
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metric::MValue* Arena::CreateMaybeMessage< ::metric::MValue >(Arena* arena) {
  return Arena::CreateInternal< ::metric::MValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::metric::Metric* Arena::CreateMaybeMessage< ::metric::Metric >(Arena* arena) {
  return Arena::CreateInternal< ::metric::Metric >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
